/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package App;

import Controllers.ProductController;
import Models.Product;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ilham Hendra
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    private static ArrayList<Integer> listId = new ArrayList<>();

    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TableBarang = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        LabelTitle = new javax.swing.JLabel();
        LabelNama = new javax.swing.JLabel();
        LabelStok = new javax.swing.JLabel();
        LabelHarga = new javax.swing.JLabel();
        FieldNama = new javax.swing.JTextField();
        FieldHarga = new javax.swing.JTextField();
        FieldStok = new javax.swing.JTextField();
        LabelListBarang = new javax.swing.JLabel();
        ButtonAdd = new javax.swing.JButton();
        ButtonEdit = new javax.swing.JButton();
        ButtonDelete = new javax.swing.JButton();
        ButtonClear = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        LabelFBeli = new javax.swing.JLabel();
        LabelTotal = new javax.swing.JLabel();
        LabelTunai = new javax.swing.JLabel();
        LabelKembalian = new javax.swing.JLabel();
        FieldKembalian = new javax.swing.JTextField();
        FieldTunai = new javax.swing.JTextField();
        ButtonCalculate = new javax.swing.JButton();
        ButtonSave = new javax.swing.JButton();
        FieldTotal = new javax.swing.JTextField();
        LabelFBarang = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BirKO");
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);

        TableBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "no", "nama", "harga", "stok"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        populateTableWithData();
        TableBarang.setColumnSelectionAllowed(true);
        TableBarang.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        TableBarang.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        TableBarang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableBarangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableBarang);
        populateTableWithData();
        TableBarang.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jPanel1.setBackground(new java.awt.Color(0, 0, 102));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(0, 0, 102));

        LabelTitle.setBackground(new java.awt.Color(255, 255, 255));
        LabelTitle.setFont(new java.awt.Font("Snap ITC", 1, 24)); // NOI18N
        LabelTitle.setForeground(new java.awt.Color(255, 255, 255));
        LabelTitle.setText("BirKO");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(LabelTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(LabelTitle)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        LabelNama.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        LabelNama.setText("Nama");

        LabelStok.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        LabelStok.setText("Stok");

        LabelHarga.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        LabelHarga.setText("Harga");

        FieldNama.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        FieldNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldNamaActionPerformed(evt);
            }
        });

        FieldHarga.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        FieldHarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldHargaActionPerformed(evt);
            }
        });

        FieldStok.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N

        LabelListBarang.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        LabelListBarang.setText("List Barang");

        ButtonAdd.setText("Add");
        ButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAddActionPerformed(evt);
            }
        });

        ButtonEdit.setText("Edit");
        ButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonEditActionPerformed(evt);
            }
        });

        ButtonDelete.setText("Delete");
        ButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDeleteActionPerformed(evt);
            }
        });

        ButtonClear.setText("Clear");
        ButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonClearActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(0, 0, 153));

        LabelFBeli.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        LabelFBeli.setForeground(new java.awt.Color(255, 255, 255));
        LabelFBeli.setText("Form Beli");

        LabelTotal.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        LabelTotal.setForeground(new java.awt.Color(255, 255, 255));
        LabelTotal.setText("Total");

        LabelTunai.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        LabelTunai.setForeground(new java.awt.Color(255, 255, 255));
        LabelTunai.setText("Tunai");

        LabelKembalian.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        LabelKembalian.setForeground(new java.awt.Color(255, 255, 255));
        LabelKembalian.setText("Kembalian");

        FieldKembalian.setEditable(false);
        FieldKembalian.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        FieldKembalian.setText("Rp. ");
        FieldKembalian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldKembalianActionPerformed(evt);
            }
        });

        FieldTunai.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        FieldTunai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldTunaiActionPerformed(evt);
            }
        });

        ButtonCalculate.setText("Calculate");
        ButtonCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCalculateActionPerformed(evt);
            }
        });

        ButtonSave.setText("Save");
        ButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSaveActionPerformed(evt);
            }
        });

        FieldTotal.setEditable(false);
        FieldTotal.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        FieldTotal.setText("Rp.");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelFBeli)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(ButtonCalculate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ButtonSave))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabelKembalian)
                            .addComponent(LabelTunai)
                            .addComponent(LabelTotal))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(FieldKembalian)
                            .addComponent(FieldTunai)
                            .addComponent(FieldTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelFBeli)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(LabelTotal)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(LabelTunai)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LabelKembalian)
                                    .addComponent(FieldKembalian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(FieldTunai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ButtonCalculate)
                            .addComponent(ButtonSave)))
                    .addComponent(FieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        LabelFBarang.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        LabelFBarang.setText("Form Barang");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabelFBarang)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LabelNama)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(LabelHarga, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(LabelStok)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(FieldNama, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(FieldHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(FieldStok, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ButtonAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ButtonEdit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ButtonDelete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ButtonClear))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelListBarang)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelFBarang)
                    .addComponent(LabelListBarang))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LabelNama)
                            .addComponent(FieldNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FieldHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelHarga))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FieldStok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelStok, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ButtonEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ButtonDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(ButtonAdd)
                                .addComponent(ButtonClear)))
                        .addGap(17, 17, 17)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FieldNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldNamaActionPerformed

    private void populateTableWithData() {
        DefaultTableModel model = (DefaultTableModel) TableBarang.getModel();
        model.setRowCount(0);

        ArrayList<Product> datas = ProductController.getAllProducts();

        listId.clear();

        int no = 1;
        for (Product data : datas) {
            listId.add(data.getProdukId());
            model.addRow(new Object[]{
                no++,
                data.getProdukName(),
                data.getProdukPrice(),
                data.getProdukStock()
            });
        }
    }

    private void ButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAddActionPerformed
        // TODO add your handling code here:
        String nama = FieldNama.getText();
        String harga = FieldHarga.getText();
        String stok = FieldStok.getText();

        if (nama.isEmpty() || harga.isEmpty() || stok.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Lengkapi Form Barang", "error", JOptionPane.ERROR_MESSAGE);
        } else {

            try {

                int hargaBarang = Integer.parseInt(harga);
                int stokBarang = Integer.parseInt(stok);
                Product p = ProductController.insertProduct(nama, hargaBarang, stokBarang);

                if (p != null) {
                    populateTableWithData();
                    clear();

                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_ButtonAddActionPerformed

    private void ButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonEditActionPerformed
        // TODO add your handling code here:
        int rowSelect = TableBarang.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) TableBarang.getModel();

        if (rowSelect >= 0) {
            int id = listId.get(rowSelect);

            if ("Edit".equals(ButtonEdit.getText())) {
                ButtonEdit.setText("Update");
                ButtonAdd.setEnabled(false);
                ButtonDelete.setEnabled(false);
                ButtonCalculate.setEnabled(false);
                ButtonSave.setEnabled(false);

                FieldNama.setText(model.getValueAt(rowSelect, 1).toString());
                FieldHarga.setText(model.getValueAt(rowSelect, 2).toString());
                FieldStok.setText(model.getValueAt(rowSelect, 3).toString());

//                JOptionPane.showMessageDialog(this, id);
            } else {
                ButtonEdit.setText("Edit");
                ButtonAdd.setEnabled(true);
                ButtonDelete.setEnabled(true);
                ButtonCalculate.setEnabled(true);
                ButtonSave.setEnabled(true);

                String nama = FieldNama.getText();
                String harga = FieldHarga.getText();
                String stok = FieldStok.getText();

                try {
                    int hargaBarang = Integer.parseInt(harga);
                    int stokBarang = Integer.parseInt(stok);

                    model.setValueAt(nama, rowSelect, 1);
                    model.setValueAt(harga, rowSelect, 2);
                    model.setValueAt(stok, rowSelect, 3);

                    Product p = ProductController.updateProduct(id, nama, hargaBarang, stokBarang);

                    if (p != null) {
                        populateTableWithData();
                        clear();
                    }
                } catch (NumberFormatException e) {
                    e.printStackTrace();
                }

            }

        } else {
            JOptionPane.showMessageDialog(this, "Tidak ada baris yang dipilih.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_ButtonEditActionPerformed

    private void ButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonClearActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_ButtonClearActionPerformed

    private void FieldKembalianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldKembalianActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_FieldKembalianActionPerformed

    private void FieldHargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldHargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldHargaActionPerformed

    private void ButtonCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCalculateActionPerformed
        // TODO add your handling code here:

        int rowSelect = TableBarang.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) TableBarang.getModel();

        if (rowSelect >= 0) {
            int id = listId.get(rowSelect);

            if (!FieldTunai.getText().isEmpty()) {

                try {

                    int hargaBarang = Integer.parseInt(model.getValueAt(rowSelect, 2).toString());
                    int tunai = Integer.parseInt(FieldTunai.getText());

                    int kembalian = tunai - hargaBarang;

                    String kembalianString = Integer.toString(kembalian);

                    if (kembalian < 0) {
                        JOptionPane.showMessageDialog(this, "Saldo tidak cukup", "Error", JOptionPane.ERROR_MESSAGE);
                        ButtonSave.setEnabled(false);
                    } else {
                        FieldKembalian.setText("Rp. " + kembalianString);
                        ButtonSave.setEnabled(true);

                    }

                } catch (Exception e) {
                    e.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Lengkapi form beli", "Error", JOptionPane.ERROR_MESSAGE);
                ButtonSave.setEnabled(false);
            }
        } else {
            JOptionPane.showMessageDialog(this, "tidak ada baris yang dipilih", "Error", JOptionPane.ERROR_MESSAGE);
            ButtonSave.setEnabled(false);
        }
    }//GEN-LAST:event_ButtonCalculateActionPerformed

    private void ButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSaveActionPerformed
        // TODO add your handling code here:
        int rowSelect = TableBarang.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) TableBarang.getModel();

        if (rowSelect >= 0) {
            int id = listId.get(rowSelect);

            if (!FieldTunai.getText().isEmpty()) {
                if (!FieldKembalian.getText().equals("Rp. ")) {

                    String nama = model.getValueAt(rowSelect, 1).toString();
                    String harga = model.getValueAt(rowSelect, 2).toString();
                    String stok = model.getValueAt(rowSelect, 3).toString();

                    try {

                        int hargaBarang = Integer.parseInt(harga);
                        int stokBarang = Integer.parseInt(stok) - 1;

                        Product p = ProductController.updateProduct(id, nama, hargaBarang, stokBarang);

                        if (p != null) {
                            FieldTunai.requestFocus();
                            populateTableWithData();
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "Click tombol calculate", "Error", JOptionPane.ERROR_MESSAGE);
                    ButtonSave.setEnabled(false);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Lengkapi form beli", "Error", JOptionPane.ERROR_MESSAGE);
                ButtonSave.setEnabled(false);
            }

        } else {
            JOptionPane.showMessageDialog(this, "tidak ada baris yang dipilih", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_ButtonSaveActionPerformed

    private void FieldTunaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldTunaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldTunaiActionPerformed

    private void ButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDeleteActionPerformed
        // TODO add your handling code here:
        int rowSelect = TableBarang.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) TableBarang.getModel();

        if (rowSelect >= 0) {
            int id = listId.get(rowSelect);

            if (id > 0) 
                try {

                int confirm = JOptionPane.showConfirmDialog(this, "Yang bener? ", "konfirmasi", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    int confirmlagi = JOptionPane.showConfirmDialog(this, "gak bo'ong? ", "konfirmasi", JOptionPane.YES_NO_OPTION);
                    if (confirmlagi == JOptionPane.YES_OPTION) {
                        ProductController.deleteProduct(id);
                        populateTableWithData();
                    }
                }
            } catch (Exception e) {
            }

        } else {
            JOptionPane.showMessageDialog(this, "tidak ada baris yang dipilih", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_ButtonDeleteActionPerformed

    private void TableBarangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableBarangMouseClicked
        // TODO add your handling code here:
        int rowSelect = TableBarang.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) TableBarang.getModel();
        if (rowSelect >= 0) {

            if (model.getValueAt(rowSelect, 3).toString().equals("0")) {
                FieldTotal.setText("Rp.");
                ButtonCalculate.setEnabled(false);
                ButtonSave.setEnabled(false);
                FieldTunai.setText("");
                JOptionPane.showMessageDialog(this, "produk tidak tersedia saat ini", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                FieldTotal.setText(String.format("Rp. %s", model.getValueAt(rowSelect, 2).toString()));
                ButtonCalculate.setEnabled(true);
                ButtonSave.setEnabled(true);
            }

        } else {
            FieldTotal.setText("Rp."); // Clear the text if no row is selected
        }
    }//GEN-LAST:event_TableBarangMouseClicked

    private void clear() {
        FieldNama.setText("");
        FieldHarga.setText("");
        FieldStok.setText("");
        FieldNama.requestFocus();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonAdd;
    private javax.swing.JButton ButtonCalculate;
    private javax.swing.JButton ButtonClear;
    private javax.swing.JButton ButtonDelete;
    private javax.swing.JButton ButtonEdit;
    private javax.swing.JButton ButtonSave;
    private javax.swing.JTextField FieldHarga;
    private javax.swing.JTextField FieldKembalian;
    private javax.swing.JTextField FieldNama;
    private javax.swing.JTextField FieldStok;
    private javax.swing.JTextField FieldTotal;
    private javax.swing.JTextField FieldTunai;
    private javax.swing.JLabel LabelFBarang;
    private javax.swing.JLabel LabelFBeli;
    private javax.swing.JLabel LabelHarga;
    private javax.swing.JLabel LabelKembalian;
    private javax.swing.JLabel LabelListBarang;
    private javax.swing.JLabel LabelNama;
    private javax.swing.JLabel LabelStok;
    private javax.swing.JLabel LabelTitle;
    private javax.swing.JLabel LabelTotal;
    private javax.swing.JLabel LabelTunai;
    private javax.swing.JTable TableBarang;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
